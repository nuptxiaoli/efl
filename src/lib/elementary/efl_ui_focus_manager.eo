enum Efl.Ui.Focus.Direction{
    right = 0,
    left = 1,
    down = 2,
    up = 3,
    next = 4,
    prev = 5,
    last = 6
}

class Efl.Ui.Focus.Manager (Eo.Base) {
    methods {
        move {
            [[Move the focus into the given direction

              This call flushes all changes.
              This means all changes between the last flush and now are computed
            ]]
            params {
                direction : Efl.Ui.Focus.Direction; [[The direction to move to]]
            }
            return : Eo.Base; [[The element which is now focused]]
        }
        request {
            [[Request the nodes in relation to the given node

              If NULL is passed as node the most upper history element is taken
            ]]
            params {
                node : Eo.Base;
                direction : Efl.Ui.Focus.Direction;
            }
            return : iterator<Eo.Base>;
        }
        request_move {
            [[Simulates a move, without setting the focus new]]
            params {
                direction : Efl.Ui.Focus.Direction;
            }
            return : Eo.Base;
        }
        register {
            [[Register a new item in the graph

              The manager does not manager if it is focusable or not.
            ]]
            params {
                child : Eo.Base; [[The object to register]]
            }
            return : bool; [[$true if it was successfull $false if not]]
        }
        unregister {
            [[unregister the given item from the graph]]
            params {
                child : Eo.Base;
            }
        }
        @property redirect {
            [[Add a another manager as redirect element.

              If this value is set all move requests are redirected to this manager object.
              Set it to $null once nothing should be redirected anymore.]]
            values {
                redirect : Efl.Ui.Focus.Manager;
            }
        }
        @property border_elements {
            [[The list of elements which are at the border of the graph
              This means one of the relations right,left or down,up are not set.

              This call flushes all changes. see @Efl.Ui.Focus.Manager.move
            ]]
            get {
                [[Get the list of border elements.]]
            }
            values {
                border_elements : iterator<Efl.Ui.Focus.Manager>;
            }
        }
    }
    implements {
        Eo.Base.constructor;
        Eo.Base.provider_find;
        Eo.Base.destructor;
    }
    events {
        pre,flush;
    }
}